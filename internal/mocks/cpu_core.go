// Code generated by MockGen. DO NOT EDIT.
// Source: C:/Users/vinicius/Documents/Projects/dreampc/domain/cpu.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "dreampc/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCpuRepository is a mock of CpuRepository interface.
type MockCpuRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCpuRepositoryMockRecorder
}

// MockCpuRepositoryMockRecorder is the mock recorder for MockCpuRepository.
type MockCpuRepositoryMockRecorder struct {
	mock *MockCpuRepository
}

// NewMockCpuRepository creates a new mock instance.
func NewMockCpuRepository(ctrl *gomock.Controller) *MockCpuRepository {
	mock := &MockCpuRepository{ctrl: ctrl}
	mock.recorder = &MockCpuRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCpuRepository) EXPECT() *MockCpuRepositoryMockRecorder {
	return m.recorder
}

// AllOrderByScoreDesc mocks base method.
func (m *MockCpuRepository) AllOrderByScoreDesc() ([]domain.Cpu, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllOrderByScoreDesc")
	ret0, _ := ret[0].([]domain.Cpu)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllOrderByScoreDesc indicates an expected call of AllOrderByScoreDesc.
func (mr *MockCpuRepositoryMockRecorder) AllOrderByScoreDesc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllOrderByScoreDesc", reflect.TypeOf((*MockCpuRepository)(nil).AllOrderByScoreDesc))
}
